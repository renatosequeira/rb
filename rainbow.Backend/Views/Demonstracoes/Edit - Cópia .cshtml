@model rainbow.Backend.Models.DemoImagesView

@{
    ViewBag.Title = "Edit";
}

<style>
    .profile-img-container {
        position: relative;
        display: inline-block; /* added */
        overflow: hidden; /* added */
    }

        .profile-img-container img {
            width: 100%;
        }
            /* remove if using in grid system */

            .profile-img-container img:hover {
                opacity: 0.5
            }

        .profile-img-container:hover p {
            opacity: 1; /* added */
            top: 0; /* added */
            z-index: 500;
        }
            /* added */
            .profile-img-container:hover p span {
                top: 50%;
                position: absolute;
                left: 0;
                right: 0;
                transform: translateY(-50%);
            }
        /* added */
        .profile-img-container p {
            display: block;
            position: absolute;
            top: -100%;
            opacity: 0;
            left: 0;
            bottom: 0;
            right: 0;
            text-align: center;
            color: inherit;
        }
</style>

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Demonstracoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Demonstracao de @Model.DataMarcacao.ToShortDateString()</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DemonstracaoId)

    <div class="form-group">
        @Html.LabelFor(model => model.DemoFinalizada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DemoFinalizada)
                @Html.ValidationMessageFor(model => model.DemoFinalizada, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RazaoNaoFinalizacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RazaoNaoFinalizacao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RazaoNaoFinalizacao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClienteComprou, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ClienteComprou)
                @Html.ValidationMessageFor(model => model.ClienteComprou, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdentificacaoVenda, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IdentificacaoVenda, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IdentificacaoVenda, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RazaoNaoCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RazaoNaoCompra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RazaoNaoCompra, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConvidadoParaCasaAberta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ConvidadoParaCasaAberta)
                @Html.ValidationMessageFor(model => model.ConvidadoParaCasaAberta, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClienteAceitouConviteParaCasaAberta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ClienteAceitouConviteParaCasaAberta)
                @Html.ValidationMessageFor(model => model.ClienteAceitouConviteParaCasaAberta, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SucessoRecrutamento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SucessoRecrutamento)
                @Html.ValidationMessageFor(model => model.SucessoRecrutamento, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Obs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CampanhaId, "CampanhaId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CampanhaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CampanhaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MarcadorId, "MarcadorId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MarcadorId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MarcadorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoVisitaId, "TipoVisitaId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TipoVisitaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoVisitaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PremioId, "PremioId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PremioId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PremioId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DemoDelegada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DemoDelegada)
                @Html.ValidationMessageFor(model => model.DemoDelegada, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DemoStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DemoStatus)
                @Html.ValidationMessageFor(model => model.DemoStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SmsAgradecimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SmsAgradecimento)
                @Html.ValidationMessageFor(model => model.SmsAgradecimento, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SmsFollowUp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SmsFollowUp)
                @Html.ValidationMessageFor(model => model.SmsFollowUp, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SmsFechoCampanha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SmsFechoCampanha)
                @Html.ValidationMessageFor(model => model.SmsFechoCampanha, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagemDemo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                if (!string.IsNullOrEmpty(Model.ImagemFichaDeDemo))
                {
                    <a class="popupimage" href="@Url.Content(Model.ImagemFichaDeDemo)">
                        <div class="profile-img-container" style="float:left;">
                            <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemFichaDeDemo)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                            <p><span class="fa fa-upload fa-2x" style="color:darkgray"></span></p>
                        </div>
                    </a>
                }

                <div class="modal fade">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <img src='' class="img-responsive" width="100%" />
                        </div>
                    </div>
                </div>
            }
            <span class="btn btn-warning btn-file">
                @Html.TextBoxFor(modelo => modelo.ImagemDemo, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagemRecomendacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes))
                {

                    <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes)">
                        <div class="profile-img-container" style="float:left;">
                            <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                            <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                        </div>
                    </a>
                }
            }

            <span class="btn btn-warning btn-file">
                @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagemRecomendacao1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes1))
                {

                    <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes1)">
                        <div class="profile-img-container" style="float:left;">
                            <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes1)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                            <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                        </div>
                    </a>
                }
            }

            <span class="btn btn-warning btn-file">
                @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao1, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagemRecomendacao2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes2))
                {

                    <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes2)">
                        <div class="profile-img-container" style="float:left;">
                            <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes2)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                            <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                        </div>
                    </a>
                }
            }

            <span class="btn btn-warning btn-file">
                @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao2, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagemRecomendacao3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes3))
                {

                    <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes3)">
                        <div class="profile-img-container" style="float:left;">
                            <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes3)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                            <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                        </div>
                    </a>
                }
            }

            <span class="btn btn-warning btn-file">
                @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao3, new { type = "file" })
            </span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Details", "Clientes", new { id = Model.ClientId }, new { @class = "btn btn-info btn-small" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="../Scripts/jquery-3.1.1.min.js"></script>
    <script src="../Scripts/bootstrap.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.popupimage').click(function (event) {
                event.preventDefault();
                $('.modal img').attr("src", $(this).attr("href"));
                $('.modal').modal('show');
            });
        });
    </script>
}
