@model rainbow.Backend.Models.DemoImagesView

@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using System;
@using System.Globalization;
@using System.Linq;
@using System.Security.Claims;
@using System.Security.Principal;
@using System.Threading.Tasks;
@using System.Web;
@using System.Web.Mvc;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Microsoft.AspNet.Identity.Owin;
@using Microsoft.Owin.Security;
@using rainbow.Backend.Models;

@{
    ViewBag.Title = "Editar demonstração";
}

<!-- Bootstrap -->
<link href="~/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link href="~/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
<!-- NProgress -->
<link href="~/vendors/nprogress/nprogress.css" rel="stylesheet">

<!-- Custom Theme Style -->
<link href="~/build/css/custom.min.css" rel="stylesheet">

<!-- iCheck -->
<link href="~/vendors/iCheck/skins/flat/green.css" rel="stylesheet">
<!-- bootstrap-wysiwyg -->
@*<link href="~/vendors/google-code-prettify/bin/prettify.min.css" rel="stylesheet">*@
<!-- Select2 -->
<link href="~/vendors/select2/dist/css/select2.min.css" rel="stylesheet">
<!-- Switchery -->
<link href="~/vendors/switchery/dist/switchery.min.css" rel="stylesheet">
<!-- starrr -->
<link href="~/vendors/starrr/dist/starrr.css" rel="stylesheet">
<!-- bootstrap-daterangepicker -->
<link href="~/vendors/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">

<!--Custom styles-->
<link href="~/Content/customStyles.css" rel="stylesheet" />

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">



@using (Html.BeginForm("Edit", "Demonstracoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <!-- page content -->
    <div class="right_col" role="main">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DemonstracaoId)

        <div class="">
            <div class="page-title">
                <div class="title_left">
                    <h3 style="font-size:30px;" class="label label-success">Demonstração de @Model.Cliente.NomeCliente.ToUpper()</h3>
                </div>

                <div class="title_right">
                    <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search for...">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button">Go!</button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="row">

                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2 style="font-size:20px;" class="label label-info">Demonstração de @Model.DataMarcacao.ToShortDateString()</h2>
                            <ul class="nav navbar-right panel_toolbox">
                                <li>
                                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                </li>
                                <li class="dropdown">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                    <ul class="dropdown-menu" role="menu">
                                        <li>
                                            <a href="#">Settings 1</a>
                                        </li>
                                        <li>
                                            <a href="#">Settings 2</a>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <a class="close-link"><i class="fa fa-close"></i></a>
                                </li>
                            </ul>
                            <div class="clearfix"></div>
                        </div>
                        <div class="x_content">

                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">Controlos<span style="float: right;"><a href="#outros" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="outros">

                                        <button type="submit" class="btn btn-success" onclick="return confirm('Tem a certeza que deseja submeter este registo?')">
                                            <span class="fa fa-save"></span> Guardar
                                        </button>

                                        <a href="/Clientes/Details/@Model.ClientId" class="btn btn-small btn-warning" onclick="return confirm('Confirma o cancelamento de todas as introduções?')">
                                            <i class="ace-icon fa fa-ban"></i>
                                            <span class="bold">Cancelar</span>
                                        </a>

                                    </div>
                                </div>

                                <!--ESTADO-->
                                <div class="panel panel-primary">

                                    <div class="panel-heading">Estado da Demo<span style="float: right;"><a href="#estado" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="estado">

                                        <div class="clearfix"></div>

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.DemoStatus,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "Demo Fechada", data_off = "Demo em aberto", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="200" }
                                                })
                                            </div>
                                        </div>



                                    </div>
                                    <div class="panel-footer" style="text-align:center;">
                                        @{

                                            if (Request.IsAuthenticated)
                                            {
                                                var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));

                                                var intialUser = manager.FindById(Model.RegisteredBy);

                                                var closingUser = manager.FindById(Model.ClosedBy);

                                                var changingUser = manager.FindById(Model.ChangedBy);

                                                string _fullNameInitialUser;

                                                string _fullNameClosingUser;

                                                string _fullNameChangingUser;

                                                string _agentCode;

                                                string quemCriou = Model.RegisteredBy;

                                                string dataModificacao;

                                                string dataCriacao;

                                                string dataFecho;


                                                try
                                                {
                                                    intialUser = manager.FindById(Model.RegisteredBy);

                                                    closingUser = manager.FindById(Model.ClosedBy);
                                                }
                                                catch (Exception)
                                                {


                                                }

                                                try
                                                {
                                                    _fullNameInitialUser = intialUser.FullName;
                                                }
                                                catch (Exception)
                                                {

                                                    _fullNameInitialUser = "Utilizador desconhecido";
                                                }

                                                try
                                                {
                                                    _fullNameClosingUser = closingUser.FullName;
                                                }
                                                catch (Exception)
                                                {

                                                    _fullNameClosingUser = "Utilizador desconhecido";
                                                }

                                                try
                                                {
                                                    _agentCode = intialUser.CodigoAgente;
                                                }
                                                catch (Exception)
                                                {
                                                    _agentCode = "Agente desconhecido";
                                                }

                                                try
                                                {
                                                    _fullNameChangingUser = changingUser.FullName;
                                                }
                                                catch (Exception)
                                                {

                                                    _fullNameChangingUser = "Utilizador desconhecido";
                                                }

                                                //var closingUser = manager.FindById(User.Identity.GetUserId());



                                                try
                                                {
                                                    dataCriacao = Model.RegisteredDate.Value.ToShortDateString();
                                                }
                                                catch (Exception)
                                                {

                                                    dataCriacao = "Sem registo";
                                                }



                                                try
                                                {
                                                    dataModificacao = Model.LastChange.Value.ToShortDateString();
                                                }
                                                catch (Exception)
                                                {

                                                    dataModificacao = "Sem registo";
                                                }

                                                try
                                                {
                                                    dataFecho = Model.ClosedDate.Value.ToShortDateString();
                                                }
                                                catch (Exception)
                                                {

                                                    dataFecho = "Demo aberta";
                                                }

                                        <span style="color:lightgray; font-weight:100; font-size:12px;">
                                            <b>Criado em:</b> @dataCriacao - <b>Utilizador:</b> @_fullNameInitialUser - <b>Agente Num:</b> @_agentCode -
                                            <b>Última modificação:</b> @_fullNameChangingUser em @dataModificacao

                                            @{
                                                if (Model.DemoStatus)
                                                {
                                                    <span> - <b>Fechado em:</b> @dataFecho - <b>Fechado por:</b> @_fullNameClosingUser </span>
                                                }
                                            }

                                        </span>


                                            }


                                        }

                                    </div>
                                </div>
                                <!--/ESTADO-->
                                <!--DADOS MARCAÇÃO-->
                                <div class="panel panel-primary">

                                    <div class="panel-heading">Marcação<span style="float: right;"><a href="#marcacao" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="marcacao">
                                        @*<div class="form-group">

                                                <div class="col-md-10" data-toggle="tooltip" data-placement="top" title="Data de marcação da demostração">
                                                    <input class="date-picker form-control col-md-7 col-xs-12 text-box single-line has-feedback-left camposNormais Half12" data-val="true" data-val-date="The field Data Marcação must be a date." id="DataMarcacao" name="DataMarcacao" type="date" value="DataMarcacao">
                                                    <span class="fa fa-calendar form-control-feedback left" aria-hidden="true"></span>
                                                    @Html.ValidationMessageFor(model => model.DataMarcacao, "", new { @class = "text-danger" })
                                                </div>
                                            </div>*@

                                        <div class="clearfix"></div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8" data-toggle="tooltip" data-placement="top" title="Marcador(a)">
                                                @Html.DropDownList("MarcadorId", null, htmlAttributes: new { @class = "form-control has-feedback-left camposNormais Half12" })
                                                <span class="fa fa-phone-square form-control-feedback left" aria-hidden="true" data-toggle="tooltip" data-placement="left" title="Tooltip left"></span>
                                            </div>

                                        </div>

                                        <div class="clearfix"></div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8" data-toggle="tooltip" data-placement="top" title="Tipo de visita">
                                                @Html.DropDownList("TipoVisitaId", null, htmlAttributes: new { @class = "form-control has-feedback-left profissao" })
                                                <span class="fa fa-user-md form-control-feedback left" aria-hidden="true" data-toggle="tooltip" data-placement="left" title="Tooltip left"></span>
                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8">
                                                @Html.EditorFor(model => model.NumeroDemoRainbow, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 novoClienteMorada", placeholder = "Número Demo Rainbow" } })
                                                <span class="fa fa-info form-control-feedback left" aria-hidden="true"></span>
                                                @Html.ValidationMessageFor(model => model.NumeroDemoRainbow, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <!--/DADOS MARCAÇÃO-->
                                <!--EXECUÇÃO-->
                                <div class="panel panel-primary">
                                    <div class="panel-heading">Execução da Demo<span style="float: right;"><a href="#execucao" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="execucao">
                                        <div class="form-group">
                                            <div class="col-md-10 camposNormais">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.DemoFinalizada,
                                                    new
                                                    {
                                                        htmlAttributes =
                                                    new { data_toggle = "toggle", data_on = "Demo finalizada", data_off = "Demo não finalizada", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="200" }
                                                    })
                                                    @*@Html.EditorFor(model => model.DemoFinalizada)*@
                                                    @Html.ValidationMessageFor(model => model.DemoFinalizada, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-12 col-sm-12">
                                                @Html.EditorFor(model => model.RazaoNaoFinalizacao, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 notas", placeholder = "Razão da não conclusão" } })
                                                <span class="fa fa-pencil form-control-feedback left" aria-hidden="true"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--/EXECUÇÃO-->
                                <!--RESUMO DA DEMO-->
                                <div class="panel panel-primary">
                                    <div class="panel-heading">Resumo da Demo<span style="float: right;"><a href="#resumo" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="resumo">

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.ClienteComprou,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "Cliente comprou", data_off = "Cliente não comprou", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="200" }
                                                })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8">
                                                @Html.EditorFor(model => model.IdentificacaoVenda, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 novoClienteMorada", placeholder = "Identificação da venda" } })
                                                <span class="fa fa-shopping-cart form-control-feedback left" aria-hidden="true"></span>
                                                @Html.ValidationMessageFor(model => model.IdentificacaoVenda, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-12 col-sm-12">
                                                @Html.EditorFor(model => model.RazaoNaoCompra, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 notas", placeholder = "Sabe porque razão o cliente não comprou?" } })
                                                <span class="fa fa-pencil form-control-feedback left" aria-hidden="true"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.ConvidadoParaCasaAberta,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-check'></i> Cliente convidado para casa aberta", data_off = "<i class='fa fa-times'></i> Cliente não convidado para casa aberta", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="300"}
                                                })
                                            </div>

                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.ClienteAceitouConviteParaCasaAberta,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-check'></i> Cliente aceitou convite", data_off = "<i class='fa fa-times'></i> Cliente não aceitou convite", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="300"}
                                                })
                                            </div>
                                        </div>

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.SucessoRecrutamento,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-smile-o'></i> Cliente recrutado", data_off = "<i class='fa fa-frown-o'></i> Cliente não recrutado", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="200"}
                                                })
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8" data-toggle="tooltip" data-placement="top" title="Campanha aberta">
                                                @Html.DropDownList("CampanhaId", null, htmlAttributes: new { @class = "form-control has-feedback-left camposNormais Half12" })
                                                <span class="fa fa-file-o form-control-feedback left" aria-hidden="true"></span>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8" data-toggle="tooltip" data-placement="top" title="Prémio entregue">
                                                @Html.DropDownList("PremioId", null, htmlAttributes: new { @class = "form-control has-feedback-left camposNormais Half12" })
                                                <span class="fa fa-gift form-control-feedback left" aria-hidden="true"></span>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-8 col-sm-8">
                                                @Html.EditorFor(model => model.NumSeriePremio, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 novoClienteMorada", placeholder = "Número de série prémio" } })
                                                <span class="fa fa-info form-control-feedback left" aria-hidden="true"></span>
                                                @Html.ValidationMessageFor(model => model.NumSeriePremio, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @*<div class="form-group">
                                                @Html.LabelFor(model => model.ImagemDemo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    <span class="btn btn-default btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemDemo, new { type = "file" })
                                                    </span>
                                                </div>
                                            </div>*@
                                    </div>
                                </div>
                                <!--/RESUMO DA DEMO-->
                                <!--FOLLOWUP-->
                                <div class="panel panel-primary">

                                    <div class="panel-heading">Follow Up<span style="float: right;"><a href="#followup" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="followup">
                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.SmsAgradecimento,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-envelope-open-o'></i> SMS agradecimento enviado", data_off = "<i class='fa fa-envelope-o'></i> SMS agradecimento não enviado", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="300"}
                                                })
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.SmsFollowUp,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-envelope-open-o'></i> SMS followup enviado", data_off = "<i class='fa fa-envelope-o'></i>  SMS followup não enviado", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="300"}
                                                })
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>

                                        <div class="col-md-10 camposNormais">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.SmsFechoCampanha,
                                                new
                                                {
                                                    htmlAttributes =
                                                new { data_toggle = "toggle", data_on = "<i class='fa fa-envelope-open-o'></i> SMS fecho campanha enviado", data_off = "<i class='fa fa-envelope-o'></i> SMS fecho campanha não enviado", data_onstyle = "success", data_offstyle = "danger", type = "checkbox", data_width="300"}
                                                })
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                                <!--/FOLLOWUP-->
                                <!--IMAGENS-->
                                <div class="panel panel-primary">

                                    <div class="panel-heading">Imagens<span style="float: right;"><a href="#imagens" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="imagens">

                                        <dl class="dl-horizontal">
                                            <dt> @Html.LabelFor(model => model.ImagemDemo, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                                            <dd>
                                                <div class="col-md-10">
                                                    @{
                                                        if (!string.IsNullOrEmpty(Model.ImagemFichaDeDemo))
                                                        {
                                                            <a class="popupimage" href="@Url.Content(Model.ImagemFichaDeDemo)">
                                                                <div class="profile-img-container" style="float:left;">
                                                                    <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemFichaDeDemo)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                                                                    <p><span class="fa fa-upload fa-2x" style="color:darkgray"></span></p>
                                                                </div>
                                                            </a>
                                                        }

                                                        <div class="modal fade">
                                                            <div class="modal-dialog">
                                                                <div class="modal-content">
                                                                    <img src='' class="img-responsive" width="100%" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    <span class="btn btn-warning btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemDemo, new { type = "file" })
                                                    </span>
                                                </div>
                                            </dd>

                                            <dt>@Html.LabelFor(model => model.ImagemRecomendacao, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                                            <dd>
                                                <div class="col-md-10">
                                                    @{
                                                        if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes))
                                                        {

                                                            <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes)">
                                                                <div class="profile-img-container" style="float:left;">
                                                                    <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                                                                    <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                                                                </div>
                                                            </a>
                                                        }
                                                    }

                                                    <span class="btn btn-warning btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao, new { type = "file" })
                                                    </span>
                                                </div>
                                            </dd>

                                            <dt>@Html.LabelFor(model => model.ImagemRecomendacao1, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                                            <dd>
                                                <div class="col-md-10">
                                                    @{
                                                        if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes1))
                                                        {

                                                            <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes1)">
                                                                <div class="profile-img-container" style="float:left;">
                                                                    <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes1)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                                                                    <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                                                                </div>
                                                            </a>
                                                        }
                                                    }

                                                    <span class="btn btn-warning btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao1, new { type = "file" })
                                                    </span>
                                                </div>
                                            </dd>

                                            <dt>@Html.LabelFor(model => model.ImagemRecomendacao2, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                                            <dd>
                                                <div class="col-md-10">
                                                    @{
                                                        if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes2))
                                                        {

                                                            <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes2)">
                                                                <div class="profile-img-container" style="float:left;">
                                                                    <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes2)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                                                                    <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                                                                </div>
                                                            </a>
                                                        }
                                                    }

                                                    <span class="btn btn-warning btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao2, new { type = "file" })
                                                    </span>
                                                </div>
                                            </dd>

                                            <dt> @Html.LabelFor(model => model.ImagemRecomendacao3, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                                            <dd>
                                                <div class="col-md-10">
                                                    @{
                                                        if (!string.IsNullOrEmpty(Model.ImagemRecomendacoes3))
                                                        {

                                                            <a class="popupimage" href="@Url.Content(Model.ImagemRecomendacoes3)">
                                                                <div class="profile-img-container" style="float:left;">
                                                                    <img class="popupimage img-thumbnail img-responsive" src="@Url.Content(Model.ImagemRecomendacoes3)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                                                                    <p><span class="fa fa-search-plus fa-2x" style="color:darkgray"></span></p>
                                                                </div>
                                                            </a>
                                                        }
                                                    }

                                                    <span class="btn btn-warning btn-file">
                                                        @Html.TextBoxFor(modelo => modelo.ImagemRecomendacao3, new { type = "file" })
                                                    </span>
                                                </div>
                                            </dd>
                                        </dl>

                                    </div>
                                </div>
                                <!--/IMAGENS-->
                                <!--NOTAS-->
                                <div class="panel panel-primary">

                                    <div class="panel-heading">Marcação<span style="float: right;"><a href="#marcacao" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                                    <div class="panel-body" id="marcacao">
                                        <div class="form-group">
                                            <div class="col-md-12 col-sm-12">
                                                @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "form-control has-feedback-left margemBottom10 notas", placeholder = "Notas adicionais" } })
                                                <span class="fa fa-pencil form-control-feedback left" aria-hidden="true"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--/NOTAS-->
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
    <!-- /page content -->
}


@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@

    <!-- FastClick -->
    <script src="~/vendors/fastclick/lib/fastclick.js"></script>
    <!-- NProgress -->
    <script src="~/vendors/nprogress/nprogress.js"></script>
    <!-- jQuery Smart Wizard -->
    <script src="~/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js"></script>
    <!-- Custom Theme Scripts -->
    @*<script src="/build/js/custom.min.js"></script>*@


    <!-- bootstrap-progressbar -->
    <script src="~/vendors/bootstrap-progressbar/bootstrap-progressbar.min.js"></script>
    <!-- iCheck -->
    <script src="~/vendors/iCheck/icheck.min.js"></script>
    <!-- bootstrap-daterangepicker -->
    <script src="~/vendors/moment/min/moment.min.js"></script>
    <script src="~/vendors/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap-wysiwyg -->
    <script src="~/vendors/bootstrap-wysiwyg/js/bootstrap-wysiwyg.min.js"></script>
    <script src="~/vendors/jquery.hotkeys/jquery.hotkeys.js"></script>
    <script src="~/vendors/google-code-prettify/src/prettify.js"></script>
    <!-- jQuery Tags Input -->
    <script src="~/vendors/jquery.tagsinput/src/jquery.tagsinput.js"></script>
    <!-- Switchery -->
    <script src="~/vendors/switchery/dist/switchery.min.js"></script>
    <!-- Select2 -->
    <script src="~/vendors/select2/dist/js/select2.full.min.js"></script>
    <!-- Parsley -->
    <script src="~/vendors/parsleyjs/dist/parsley.min.js"></script>
    <!-- Autosize -->
    <script src="~/vendors/autosize/dist/autosize.min.js"></script>
    <!-- jQuery autocomplete -->
    <script src="~/vendors/devbridge-autocomplete/dist/jquery.autocomplete.min.js"></script>
    <!-- starrr -->
    <script src="~/vendors/starrr/dist/starrr.js"></script>

    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

    <script>
        $(function () {
            $("#delete_button").click(function () {
                if (confirm("Click OK to continue?")) {
                    $('form#delete').submit();
                }
            });
        });
    </script>
}

