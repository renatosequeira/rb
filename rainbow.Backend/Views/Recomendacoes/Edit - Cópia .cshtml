@model rainbow.Backend.Models.ImagemRecomendacaoView

@{
    ViewBag.Title = "Edit";
}

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">

<h2>Edit</h2>



@using (Html.BeginForm("Edit", "Recomendacoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recomendacao</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RecomendacaoId)
        @Html.HiddenFor(model => model.ScanFolhaDeContactos)

        <div class="form-group">
            @Html.LabelFor(model => model.NomeSr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeSr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeSr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeSra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeSra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeSra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdadeSr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdadeSr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdadeSr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdadeSra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdadeSra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdadeSra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelemSr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelemSr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelemSr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelemSra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelemSra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelemSra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfissaoSr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfissaoSr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfissaoSr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfisaoSra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfisaoSra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfisaoSra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoCivilId, "EstadoCivilId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EstadoCivilId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstadoCivilId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RelacaoId, "RelacaoId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RelacaoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelacaoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TitleId, "TitleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TitleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TitleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecomendationsImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="btn btn-default btn-file">
                    @Html.TextBoxFor(modelo => modelo.RecomendationsImageFile, new { type = "file" })
                </span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Obs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Contactado, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.Contactado)*@
                    @Html.EditorFor(model => model.Contactado,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Cliente contactado", data_off = "Cliente não contactado", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.Contactado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.OkParaContactar, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox" data-toggle="toggle">
                    @*@Html.EditorFor(model => model.OkParaContactar)*@
                    @Html.EditorFor(model => model.OkParaContactar,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Cliente aceitou contacto", data_off = "Cliente não aceitou contacto", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.OkParaContactar, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.DemoMarcada, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox" data-toggle="toggle">
                    @*@Html.EditorFor(model => model.DemoMarcada)*@
                    @Html.EditorFor(model => model.DemoMarcada,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Demo marcada", data_off = "Demo não marcada", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.DemoMarcada, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Recrutamento, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.Recrutamento)*@
                    @Html.EditorFor(model => model.Recrutamento,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Recrutamento - SIM", data_off = "Recrutamento - Não", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.Recrutamento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Filhos, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.Filhos)*@
                    @Html.EditorFor(model => model.Filhos,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Cliente tem filhos", data_off = "Cliente não tem filhos", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.Filhos, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Animais, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.Animais)*@
                    @Html.EditorFor(model => model.Animais,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Cliente tem animais", data_off = "Cliente não tem animais", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.Animais, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ContactoPrioritario, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.ContactoPrioritario)*@
                    @Html.EditorFor(model => model.ContactoPrioritario,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Contacto prioritário", data_off = "Contacto não prioritário", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.ContactoPrioritario, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ClienteRB, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.ClienteRB)*@
                    @Html.EditorFor(model => model.ClienteRB,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "É cliente RB", data_off = "Não é cliente RB", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.ClienteRB, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.DemoExecutada, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.DemoExecutada)*@
                    @Html.EditorFor(model => model.DemoExecutada,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Demo executada", data_off = "Demo não executada", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.DemoExecutada, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ClienteAceitouDemo, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.EditorFor(model => model.ClienteAceitouDemo)*@
                    @Html.EditorFor(model => model.ClienteAceitouDemo,
         new
         {
             htmlAttributes =
         new { data_toggle = "toggle", data_on = "Cliente aceitou demo", data_off = "Cliente não aceitou demo", data_onstyle = "success", data_offstyle = "danger", type = "checkbox" }
         })
                    @Html.ValidationMessageFor(model => model.ClienteAceitouDemo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    @Html.ActionLink("Voltar", "Details", "Clientes", new { id = Model.ClientId }, new { @class = "btn btn-info btn-small" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

    <script>

        $(document).ready(function () {

            // Connect to 'change' event in order to toggle glyphs

            $("[type='checkbox']").change(function () {

                if ($(this).prop('checked')) {

                    $(this).prev().addClass('glyphicon-ok-circle');

                    $(this).prev().removeClass('glyphicon-unchecked');

                }

                else {

                    $(this).prev().removeClass('glyphicon-ok-circle');

                    $(this).prev().addClass('glyphicon-unchecked');

                }

            });

        });



    </script>


}
