@model rainbow.Domain.Client.Cliente

@{
    ViewBag.Title = "Novo cliente";
}

<style>
    .NomeField {
        max-width: 100%;
        display: block;
        width: 90%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .TitleSelector {
        margin-right: 5px;
        float: left;
        display: block;
        width: auto;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .DataNascimentoField {
        float: left;
        margin-right: 5px;
        display: block;
        width: auto;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .IdadeField {
        float: left;
        display: block;
        width: 75px;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .MoradaField {
        max-width: 100%;
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .TelemovelField {
        margin-right: 5px;
        float: left;
        display: block;
        width: auto;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .ContactoAlternativoField {
        float: left;
        display: block;
        width: auto;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .LocalidadeField {
        float: left;
        display: block;
        width: auto;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .CPField {
        margin-right: 5px;
        float: left;
        display: block;
        width: 100px;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .Notas {
        max-width: 100% !important;
        min-height: 50px;
        float: left;
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        color: #555555;
        vertical-align: middle;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Novo cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-lg-12 col-md-12 col-sm-12">

            <div class="panel panel-success ">

                <div class="panel-heading">Dados gerais<span style="float: right;"><a href="#dadosGerais" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                <div class="panel-body" id="dadosGerais">

                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.DropDownList("TitleId", null, htmlAttributes: new { @class = "TitleSelector" })
                            @Html.EditorFor(model => model.NomeCliente, new { htmlAttributes = new { @class = "NomeField", placeholder = "Nome cliente", onchange = "OnChangeEvent()" } })
                            @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataNascimentoCliente, new { htmlAttributes = new { @class = "DataNascimentoField" } })
                            @Html.EditorFor(model => model.IdadeCliente, new { htmlAttributes = new { @class = "IdadeField", placeholder = "Idade" } })
                            @Html.ValidationMessageFor(model => model.DataNascimentoCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.DropDownList("EstadoCivilId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EstadoCivilId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.DropDownList("ProfissaoId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProfissaoId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ElegivelParaRecrutamento, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ElegivelParaRecrutamento)
                                @Html.ValidationMessageFor(model => model.ElegivelParaRecrutamento, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>


        <div class="col-lg-12 col-md-12 col-sm-12">

            <div class="panel panel-success ">

                <div class="panel-heading">Contactos cliente<span style="float: right;"><a href="#contactosCliente" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                <div class="panel-body" id="contactosCliente">

                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MoradaCliente, new { htmlAttributes = new { @class = "MoradaField", placeholder = "Morada" } })
                            @Html.ValidationMessageFor(model => model.MoradaCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CodigoPostalCliente, new { htmlAttributes = new { @class = "CPField", placeholder = "CP" } })
                            @Html.EditorFor(model => model.Localidade, new { htmlAttributes = new { @class = "LocalidadeField", placeholder = "Localidade" } })
                            @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.TelemovelCliente, new { htmlAttributes = new { @class = "TelemovelField", placeholder = "Telemóvel" } })
                            @Html.EditorFor(model => model.ContactoAlternativoCliente, new { htmlAttributes = new { @class = "ContactoAlternativoField", placeholder = "Contacto alternativo" } })
                            @Html.ValidationMessageFor(model => model.TelemovelCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EmailCliente, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.EmailCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

        </div>


        <div class="col-lg-12 col-md-12 col-sm-12" style="clear:both; width:100% !important;">

            <div class="panel panel-success ">

                <div class="panel-heading">Notas<span style="float: right;"><a href="#notas" style="color: white;" data-toggle="collapse"><i class="fa fa-angle-double-down" aria-hidden="true"></i></a></span></div>
                <div class="panel-body" id="notas">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "Notas", placeholder = "Notas" } })
                            @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $('#TelemovelCliente').change(function () {

        $("#id").val().length;

        if $('#TelemovelCliente').val.length >= 0 {

        }
    alert('Changed!');
    @*@Model.IsChanged = true;*@
});
    </script>

    <script type="text/javascript">
 function OnChangeEvent(nome){
    alert("value is changed" + nome);
    @*@Model.IsChanged = true;*@
 }
    </script>
}
